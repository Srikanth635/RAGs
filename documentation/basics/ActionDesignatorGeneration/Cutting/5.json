{
  "task_specific_action_designators" : [
    {
    "task": "Cut the Apple",
    "cram_plan": "(perform (an action (type cutting) (object (type apple) (name apple)) (tool (type knife) (sharpness high)) (sub-actions ((reach (object (type knife) (properties sharpness high))) (grasp (object (type knife))) (move (object (type knife)) (to location (type apple))) (cut (object (type apple)) (angle 45)))) (feedback ((visual (object (type apple)) (property cut-progress)) (haptic (object (type knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability cut-accuracy)) (priors ((grip-stability . 0.9) (cut-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type knife-handle)))) (grasp (object (type knife)) (force moderate)) (cut (object (type apple)) (angle 45)) (complete-cut (object (type apple))))))))"
    },
    {
      "task": "Slice the Cucumber",
      "cram_plan": "(perform (an action (type cutting) (object (type cucumber) (name cucumber)) (tool (type knife) (sharpness high)) (sub-actions ((reach (object (type knife) (properties sharpness high))) (grasp (object (type knife))) (move (object (type knife)) (to location (type cucumber))) (cut (object (type cucumber)) (angle 45)))) (feedback ((visual (object (type cucumber)) (property slice-thickness)) (haptic (object (type knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability cut-accuracy)) (priors ((grip-stability . 0.9) (cut-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type knife-handle)))) (grasp (object (type knife)) (force moderate)) (cut (object (type cucumber)) (angle 45)) (complete-cut (object (type cucumber))))))))"
    },
    {
      "task": "Chop the Onion",
      "cram_plan": "(perform (an action (type cutting) (object (type onion) (name onion)) (tool (type chef-knife) (sharpness high)) (sub-actions ((reach (object (type chef-knife) (properties sharpness high))) (grasp (object (type chef-knife))) (move (object (type chef-knife)) (to location (type onion))) (chop (object (type onion)) (angle 90)))) (feedback ((visual (object (type onion)) (property chop-progress)) (haptic (object (type chef-knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability chop-accuracy)) (priors ((grip-stability . 0.9) (chop-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type chef-knife-handle)))) (grasp (object (type chef-knife)) (force moderate)) (chop (object (type onion)) (angle 90)) (complete-chop (object (type onion))))))))"
    },
    {
      "task": "Dice the Carrot",
      "cram_plan": "(perform (an action (type cutting) (object (type carrot) (name carrot)) (tool (type knife) (sharpness medium)) (sub-actions ((reach (object (type knife) (properties sharpness medium))) (grasp (object (type knife))) (move (object (type knife)) (to location (type carrot))) (dice (object (type carrot)) (size small)))) (feedback ((visual (object (type carrot)) (property dice-size)) (haptic (object (type knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability dice-accuracy)) (priors ((grip-stability . 0.9) (dice-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type knife-handle)))) (grasp (object (type knife)) (force moderate)) (dice (object (type carrot)) (size small)) (complete-dice (object (type carrot))))))))"
    },
    {
      "task": "Peel the Potato",
      "cram_plan": "(perform (an action (type peeling) (object (type potato) (name potato)) (tool (type peeler) (sharpness high)) (sub-actions ((reach (object (type peeler) (properties sharpness high))) (grasp (object (type peeler))) (move (object (type peeler)) (to location (type potato))) (peel (object (type potato))))) (feedback ((visual (object (type potato)) (property peel-progress)) (haptic (object (type peeler)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability peel-accuracy)) (priors ((grip-stability . 0.9) (peel-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type peeler-handle)))) (grasp (object (type peeler)) (force moderate)) (peel (object (type potato))))))))"
    },
    {
      "task": "Julienne the Carrot",
      "cram_plan": "(perform (an action (type cutting) (object (type carrot) (name carrot)) (tool (type mandoline) (sharpness high) (precision high)) (sub-actions ((reach (object (type mandoline) (properties sharpness high) (properties precision high))) (grasp (object (type mandoline))) (move (object (type mandoline)) (to location (type carrot))) (cut (object (type carrot)) (number 10) (size thin) (precision high)))) (feedback ((visual (object (type carrot)) (property cut-thickness)) (haptic (object (type mandoline)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability cut-accuracy)) (priors ((grip-stability . 0.9) (cut-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type mandoline-handle)))) (grasp (object (type mandoline)) (force moderate)) (cut (object (type carrot)) (number 10) (size thin) (precision high)) (complete-cut (object (type carrot))))))))"
    },
    {
      "task": "Slice the Tomato into Even Slices",
      "cram_plan": "(perform (an action (type cutting) (object (type tomato) (name tomato)) (tool (type serrated knife) (sharpness medium) (precision high)) (sub-actions ((reach (object (type serrated knife) (properties sharpness medium) (properties precision high))) (grasp (object (type serrated knife))) (move (object (type serrated knife)) (to location (type tomato))) (cut (object (type tomato)) (number 5) (size medium) (precision high)))) (feedback ((visual (object (type tomato)) (property slice-thickness)) (haptic (object (type serrated knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability cut-accuracy)) (priors ((grip-stability . 0.9) (cut-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type serrated-knife-handle)))) (grasp (object (type serrated knife)) (force moderate)) (cut (object (type tomato)) (number 5) (size medium) (precision high)) (complete-cut (object (type tomato))))))))"
    },
    {
      "task": "Chop the Garlic into Small Pieces",
      "cram_plan": "(perform (an action (type cutting) (object (type garlic) (name garlic)) (tool (type chef-knife) (sharpness high) (precision moderate)) (sub-actions ((reach (object (type chef-knife) (properties sharpness high) (properties precision moderate))) (grasp (object (type chef-knife))) (move (object (type chef-knife)) (to location (type garlic))) (chop (object (type garlic)) (number 8) (size small) (precision moderate)))) (feedback ((visual (object (type garlic)) (property chop-size)) (haptic (object (type chef-knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability chop-accuracy)) (priors ((grip-stability . 0.9) (chop-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type chef-knife-handle)))) (grasp (object (type chef-knife)) (force moderate)) (chop (object (type garlic)) (number 8) (size small) (precision moderate)) (complete-chop (object (type garlic))))))))"
    },
    {
      "task": "Cut the Pineapple into Rings",
      "cram_plan": "(perform (an action (type cutting) (object (type pineapple) (name pineapple)) (tool (type serrated knife) (sharpness high) (precision moderate)) (sub-actions ((reach (object (type serrated knife) (properties sharpness high) (properties precision moderate))) (grasp (object (type serrated knife))) (move (object (type serrated knife)) (to location (type pineapple))) (cut (object (type pineapple)) (number 10) (size large) (precision moderate)))) (feedback ((visual (object (type pineapple)) (property ring-thickness)) (haptic (object (type serrated knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability cut-accuracy)) (priors ((grip-stability . 0.9) (cut-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type serrated-knife-handle)))) (grasp (object (type serrated knife)) (force moderate)) (cut (object (type pineapple)) (number 10) (size large) (precision moderate)) (complete-cut (object (type pineapple))))))))"
    },
    {
      "task": "Dice the Bell Pepper",
      "cram_plan": "(perform (an action (type cutting) (object (type bell-pepper) (name bell-pepper)) (tool (type chef-knife) (sharpness high) (precision high)) (sub-actions ((reach (object (type chef-knife) (properties sharpness high) (properties precision high))) (grasp (object (type chef-knife))) (move (object (type chef-knife)) (to location (type bell-pepper))) (dice (object (type bell-pepper)) (number 12) (size small) (precision high)))) (feedback ((visual (object (type bell-pepper)) (property dice-size)) (haptic (object (type chef-knife)) (property grip-force))) (learning-source demonstration) (generalization true) (probabilistic-inference (variables (grip-stability dice-accuracy)) (priors ((grip-stability . 0.9) (dice-accuracy . 0.8))) (update-rules (sensory-feedback))) (motion-phases ((reach (start-point (location (type hand-start))) (end-point (location (type chef-knife-handle)))) (grasp (object (type chef-knife)) (force moderate)) (dice (object (type bell-pepper)) (number 12) (size small) (precision high)) (complete-dice (object (type bell-pepper))))))))"
    }
  ]
}